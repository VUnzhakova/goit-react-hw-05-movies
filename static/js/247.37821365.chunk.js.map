{"version":3,"file":"static/js/247.37821365.chunk.js","mappings":"wOA6CA,UAxCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBF,GAAW,GADW,kBAGCG,EAAAA,EAAAA,YAAgBT,GAHjB,OAGdG,EAHc,OAIpBC,EAAUD,GAJU,gDAMpBO,QAAQC,IAAR,MANoB,yBAQpBL,GAAW,GARS,4EAAH,qDAWrBE,MACC,CAACR,KAGF,2BACGK,IAAW,SAAC,IAAD,KACZ,wBACGF,EAAOS,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEC,MAAM,QACNC,IAAK,kCAAoCF,EAAMG,aAC/CC,IAAKJ,EAAMK,iBAEb,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,eAPdP,EAAMQ,c,2CCnBzB,IATe,WACP,OAAO,SAAC,KAAD,CACXC,OAAO,MACPR,MAAM,MACNS,MAAM,OACNC,UAAU,c,yECLdC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEVC,EAAa,mCAAG,oGACGF,IAAAA,IAAA,qCAAwCC,IAD3C,cACdE,EADc,yBAEbA,EAASC,KAAKC,SAFD,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACJP,IAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF1D,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAMjC,GAAN,uFACDyB,IAAAA,IAAA,gBACZzB,EADY,oBACO0B,EADP,oBADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBK,EAAW,mCAAG,WAAMlC,GAAN,uFACKyB,IAAAA,IAAA,gBACZzB,EADY,4BACe0B,EADf,oBADL,cACZE,EADY,yBAIXA,EAASC,KAAKM,MAJH,2CAAH,sDAOXC,EAAY,mCAAG,WAAMpC,GAAN,uFACIyB,IAAAA,IAAA,gBACZzB,EADY,4BACe0B,EADf,2BADJ,cACbE,EADa,yBAIZA,EAASC,KAAKC,SAJF,2CAAH,sDAOZrB,EAAM,CACVkB,cAAAA,EACAI,qBAAAA,EACAE,kBAAAA,EACAC,YAAAA,EACAE,aAAAA,GAGF","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      setLoading(true);\n      try {\n        const actors = await api.fetchActors(movieId);\n        setActors(actors);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul>\n        {actors.map(actor => (\n          <li key={actor.id}>\n            <img\n              width=\"200px\"\n              src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n              alt={actor.original_name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <Oval\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '5ccc52ff517b9ef53bd77baeca7b01c7';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetalis = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchByKeyword,\n  fetchMovieDetalis,\n  fetchActors,\n  fetchReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","onActorsOfMovie","api","console","log","map","actor","width","src","profile_path","alt","original_name","name","character","id","height","color","ariaLabel","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetalis","fetchActors","cast","fetchReviews"],"sourceRoot":""}