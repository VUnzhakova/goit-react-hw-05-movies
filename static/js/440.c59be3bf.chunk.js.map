{"version":3,"file":"static/js/440.c59be3bf.chunk.js","mappings":"6JAWA,IATe,WACP,OAAO,SAAC,KAAD,CACXA,OAAO,MACPC,MAAM,MACNC,MAAM,OACNC,UAAU,c,qKCNd,EAA+B,uCAA/B,EAAkF,oC,SC4ElF,EAtEyB,WAAO,IAAD,IACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBJ,GAAW,GADU,kBAGOK,EAAAA,EAAAA,kBAAsBX,GAH7B,OAGbY,EAHa,OAInBR,EAAaQ,GAJM,gDAMnBC,QAAQC,IAAR,MANmB,yBAQnBR,GAAW,GARQ,4EAAH,qDAWpBI,MACC,CAACV,KAGF,iCACE,SAAC,KAAD,CAAMe,GAAE,iBAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,UAAnC,UACE,oBAAQC,KAAK,SAAb,WACE,SAAC,MAAD,IADF,gBAIDb,IAAW,SAACc,EAAA,EAAD,IACXhB,IACC,iBAAKiB,UAAWC,EAAhB,WACE,gBACExB,MAAM,QACNyB,IAAK,kCAAoCnB,EAAUoB,YACnDC,IAAKrB,EAAUsB,kBAEjB,4BACE,0BACGtB,EAAUuB,MADb,KACsBvB,EAAUwB,aAAaC,MAAM,EAAG,GADtD,QAGA,wCAAgBzB,EAAU0B,eAC1B,sCACA,uBAAI1B,EAAU2B,YACd,oCACA,eAAIV,UAAWC,EAAf,SACGlB,EAAU4B,OAAOC,KAAI,SAAAC,GAAK,OACzB,wBAAoBA,EAAMC,MAAjBD,EAAME,gBAMzB,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMpB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,mBACA,SAAC,KAAD,Y,yECrERqB,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEVC,EAAa,mCAAG,oGACGF,IAAAA,IAAA,qCAAwCC,IAD3C,cACdE,EADc,yBAEbA,EAASC,KAAKC,SAFD,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACJP,IAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF1D,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAM5C,GAAN,uFACDoC,IAAAA,IAAA,gBACZpC,EADY,oBACOqC,EADP,oBADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBK,EAAW,mCAAG,WAAM7C,GAAN,uFACKoC,IAAAA,IAAA,gBACZpC,EADY,4BACeqC,EADf,oBADL,cACZE,EADY,yBAIXA,EAASC,KAAKM,MAJH,2CAAH,sDAOXC,EAAY,mCAAG,WAAM/C,GAAN,uFACIoC,IAAAA,IAAA,gBACZpC,EADY,4BACeqC,EADf,2BADJ,cACbE,EADa,yBAIZA,EAASC,KAAKC,SAJF,2CAAH,sDAOZ9B,EAAM,CACV2B,cAAAA,EACAI,qBAAAA,EACAE,kBAAAA,EACAC,YAAAA,EACAE,aAAAA,GAGF","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <ThreeDots\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"movieDetalis\":\"MovieDetailsPage_movieDetalis__JFXgY\",\"genreList\":\"MovieDetailsPage_genreList__OPvFn\"};","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\nimport { FcLeft } from 'react-icons/fc';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const onDetalisMovie = async () => {\n      setLoading(true);\n      try {\n        const detalyMovie = await api.fetchMovieDetalis(movieId);\n        setMovieInfo(detalyMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onDetalisMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location?.state?.from ?? '/movies'}>\n        <button type=\"button\">\n          <FcLeft /> Go back\n        </button>\n      </Link>\n      {loading && <Loader />}\n      {movieInfo && (\n        <div className={s.movieDetalis}>\n          <img\n            width=\"300px\"\n            src={'https://image.tmdb.org/t/p/w500' + movieInfo.poster_path}\n            alt={movieInfo.original_title}\n          />\n          <div>\n            <h1>\n              {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {movieInfo.popularity}</p>\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n            <h2>Genres</h2>\n            <ul className={s.genreList}>\n              {movieInfo.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '5ccc52ff517b9ef53bd77baeca7b01c7';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetalis = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchByKeyword,\n  fetchMovieDetalis,\n  fetchActors,\n  fetchReviews,\n};\n\nexport default api;\n"],"names":["height","width","color","ariaLabel","movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","onDetalisMovie","api","detalyMovie","console","log","to","state","from","type","Loader","className","s","src","poster_path","alt","original_title","title","release_date","slice","popularity","overview","genres","map","genre","name","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetalis","fetchActors","cast","fetchReviews"],"sourceRoot":""}